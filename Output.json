"{\"README.md\":\"```pythonfrom app import create_appapp = create_app()if __name__ == '__main__':    app.run(debug=True)```\",\"README.md\":\"```pythonfrom flask import Flaskfrom .routes import maindef create_app():    app = Flask(__name__)    app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///employees.db'    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False        with app.app_context():        from .models import db        db.init_app(app)        db.create_all()    app.register_blueprint(main)    return app```\",\"app\":\"```pythonfrom flask_sqlalchemy import SQLAlchemydb = SQLAlchemy()class Employee(db.Model):    id = db.Column(db.Integer, primary_key=True)    name = db.Column(db.String(100), nullable=False)    position = db.Column(db.String(100), nullable=False)    salary = db.Column(db.Float, nullable=False)    def __repr__(self):        return f'<Employee {self.name}>'```\",\"__repr__(self):\":\"```pythonfrom flask import Blueprint, render_template, request, redirect, url_forfrom .models import db, Employeemain = Blueprint('main', __name__)@main.route('/', methods=['GET', 'POST'])def index():    if request.method == 'POST':        name = request.form['name']        position = request.form['position']        salary = request.form['salary']                new_employee = Employee(name=name, position=position, salary=salary)        db.session.add(new_employee)        db.session.commit()        return redirect(url_for('main.index'))        employees = Employee.query.all()    return render_template('index.html', employees=employees)@main.route('/add')def add_employee():    return render_template('employee_form.html')```\",\"render_template('employee_form.html')\":\"```html<!doctype html><html lang=\"en\"><head>    <meta charset=\"UTF-8\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">    <title>Employee Info</title></head><body>    <h1>Employee List</h1>    <table>        <tr>            <th>Name</th>            <th>Position</th>            <th>Salary</th>        </tr>        {% for employee in employees %}        <tr>            <td>{{ employee.name }}</td>            <td>{{ employee.position }}</td>            <td>{{ employee.salary }}</td>        </tr>        {% endfor %}    </table>    <a href=\"/add\">Add Employee</a></body></html>```\",\"List</h1>\":\"```html<!doctype html><html lang=\"en\"><head>    <meta charset=\"UTF-8\">    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">    <title>Add Employee</title></head><body>    <h1>Add Employee</h1>    <form method=\"post\" action=\"/\">        <label>Name: </label>        <input type=\"text\" name=\"name\" required>        <label>Position: </label>        <input type=\"text\" name=\"position\" required>        <label>Salary: </label>        <input type=\"number\" step=\"0.01\" name=\"salary\" required>        <button type=\"submit\">Add Employee</button>    </form>    <a href=\"/\">Back to Employee List</a></body></html>```\",\"</label>\":\"```markdown# Employee Info Flask AppThis is a simple Flask web application to store and manage employee information.## File Structure```}"